---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tuning
rules:
  - apiGroups: ["*"]
    resources:
      - configmaps
      - services
      - deployments
      - searchspaces
      - pods
    verbs: ["get","list","watch","create","update","patch","delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tuning
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tuning
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: smarttuning-config
data:
  # test config
  MOCK: "False"
  PRINT_CONFIG: "True"
  # mongo config
  MONGO_ADDR: 'mongo-workload-service.default.svc.cluster.local'
  MONGO_PORT: '27017'
  MONGO_DB: 'smarttuning'
  # prometheus config
  PROMETHEUS_ADDR: 'prometheus-service.kube-monitoring.svc.cluster.local'
  PROMETHEUS_PORT: '9090'
  SAMPLING_METRICS_TIMEOUT: '600'
  WAITING_TIME: '600'
  SAMPLE_SIZE: '0.3334'
  # classification config
  K: '1'
  DISTANCE_METHOD: "hellinger"
  URL_SIMILARITY_THRESHOLD: "0.1"
  # optimization config
  #SEARCH_SPACE_NAME: 'acmeair-searchspace'
  BAYESIAN: 'True'
  # n_startup_jobs: # of jobs doing random search at begining of optimization
  N_STARTUP_JOBS: '20'
  # n_EI_candidades: number of config samples draw before select the best. lower number encourages exploration
  N_EI_CANDIDATES: '24'
  # gamma: p(y) in p(y|x) = p(x|y) * p(x)/p(y) or specifically  1/(gamma + g(x)/l(x)(1-gamma))
  GAMMA: '0.25'
  NUMBER_ITERATIONS: '55'
  ITERATIONS_BEFORE_REINFORCE: '10'
  TRY_BEST_AT_EVERY: '10'
  REINFORCEMENT_RATIO: '0.3334'
  METRIC_THRESHOLD: '0.0'
  RANDOM_SEED: '31'
  ## the objective is always to minimize
  ## 2 ** 20 transforms bytes to megabytes
  ## AWS Cost, CPU: 0.0535/vCore Memory: 0.013375/GB --> (total_cost / CPU  + total_cost / GB) / 2
  ## M5 Instance https://aws.amazon.com/ec2/pricing/on-demand/
  OBJECTIVE: '-(throughput / ((((memory / (2**20)) * 0.013375) + (cpu * 0.0535) ) / 2))'
  THROUGHPUT_THRESHOLD: '10'
  QUANTILE: '1.0'
  NAMESPACE: 'default'
  PROXY_IMAGE: 'smarttuning/proxy'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: smarttuning
  labels:
    app: smarttuning
    config: "0"
spec:
  replicas: 1
  template:
    metadata:
      name: smarttuning
      labels:
        app: smarttuning
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - kind-worker
                      - docker-desktop
      containers:
        - name: smarttuning
          image: quay.io/smarttuning/smarttuning:dev
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5000
          envFrom:
            - configMapRef:
                name: smarttuning-config
          volumeMounts:
            - mountPath: /etc/smart-tuning
              name: smarttuning-config
      volumes:
        - name: smarttuning-config
          configMap:
            name: smarttuning-config
  selector:
    matchLabels:
      app: smarttuning
