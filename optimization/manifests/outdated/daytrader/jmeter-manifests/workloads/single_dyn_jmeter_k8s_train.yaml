apiVersion: v1
kind: Service
metadata:
  name: jmeter-train
  labels:
    app: jmeter-train
spec:
  type: NodePort
  ports:
    - port: 9270
      targetPort: 9270
      name: smarttuning
  selector:
    app: jmeter-train
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  annotations:
    reloader.stakater.com/auto: "true"
    prometheus.io/scrape: "true"
      #prometheus.io/path: "/metrics"
    prometheus.io/port: "9270"
  labels:
    app: jmeter-train
  name: jmeter-train
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jmeter-train
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: jmeter-train
    spec:
      containers:
      - image: smarttuning/dynamic_jmeter_daytrader
        name: dynamic-jmeter-daytrader
        ports:
          - containerPort: 9270
            name: http
        imagePullPolicy: IfNotPresent
        env:
          - name: JHOST
            value: 'daytrader-smarttuning.default.svc.cluster.local'
        envFrom:
          - configMapRef:
              name: jmeter-config-train
              #        volumeMounts:
              #          - mountPath: /etc/jmeter
              #            name: jmeter-config
              #          - mountPath: /output-prod
              #            name: jmeter-output
              #      volumes:
              #        - name: jmeter-config
              #          configMap:
              #            name: jmeter-config
              #        - name: jmeter-output
              #          hostPath:
              #            path: /smarttuning/jmeter/prod
status: {}
