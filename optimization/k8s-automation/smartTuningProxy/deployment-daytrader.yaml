apiVersion: apps/v1
kind: Deployment
metadata:
  name: daytrader
spec:
  selector:
    matchLabels:
      app: daytrader
  replicas: 1
  template:
    metadata:
      labels:
        app: daytrader
    spec:
      initContainers:
        - name: init-networking
          image: smarttuning-init:latest
          imagePullPolicy: Never
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
            privileged: true
          env:
            - name: PROXY_PORT
              value: "8888"
            - name: SERVICE_PORT
              value: "9080"
      containers:
        - name: service
          image: daytrader8-k8s:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 9080
          env:
            - name: DB_ADDRESS
              value: daytrader-db.default.svc.cluster.local
            - name: DB_PORT
              value: "1527"
          livenessProbe:
            httpGet:
              path: /health
              port: "http"
            initialDelaySeconds: 5
            periodSeconds: 5
        - name: proxy
          image: smarttuning-proxy:latest
          imagePullPolicy: Never
          env:
            - name: DEBUG
              value: "TRUE"
            - name: PROXY_PORT
              value: "8888"
            - name: SERVICE_PORT
              value: "9080"
            - name: METRICS_PORT
              value: "9090"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
          ports:
            - containerPort: 8888
            - containerPort: 9090

---
# make it reacheable by prometheus
apiVersion: v1
kind: Service
metadata:
  name: daytrader
  labels:
    app: daytrader
spec:
  type: NodePort
  ports:
    - nodePort: 30099
      port: 9090
      targetPort: 9090
      name: remap
      protocol: TCP
    - port: 9093
      targetPort: 9493
      name: https
      protocol: TCP
    - nodePort: 30080
      port: 8888
      targetPort: 9080
      protocol: TCP
      name: http
  selector:
    app: daytrader
  # export KUBE_TOKEN=$(</var/run/secrets/kubernetes.io/serviceaccount/token)
  # curl -sSk -H "Authorization: Bearer $(</var/run/secrets/kubernetes.io/serviceaccount/token)" https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_PORT_443_TCP_PORT/apis/metrics.k8s.io/v1beta1/namespaces/default/pods/
---
#### Daytrader Database  #####
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    service: daytrader-db
  name: daytrader-db
spec:
  ports:
  - name: "1527"
    port: 1527
    protocol: TCP
    targetPort: 1527
  selector:
    service: daytrader-db
status:
  loadBalancer: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  name: daytrader-db
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        service: daytrader-db
    spec:
      containers:
      - image: derby:latest
        name: daytrader-db
        imagePullPolicy: Never
        ports:
        - containerPort: 1527
          protocol: TCP
        resources: {}
      restartPolicy: Always
status: {}

