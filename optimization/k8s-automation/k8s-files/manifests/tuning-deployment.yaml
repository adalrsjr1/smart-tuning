apiVersion: v1
kind: ConfigMap
metadata:
  name: smarttuning-config
data:
  # test config
  MOCK: "False"
  PRINT_CONFIG: "True"
  # mongo config
  MONGO_ADDR: 'mongo-workload-service.default.svc.cluster.local'
  MONGO_PORT: '27017'
  MONGO_DB: 'smarttuning'
  # prometheus config
  PROMETHEUS_ADDR: 'prometheus-service.kube-monitoring.svc.cluster.local'
  PROMETHEUS_PORT: '9090'
  # classification config
  K: '1'
  DISTANCE_METHOD: "hellinger"
  URL_SIMILARITY_THRESHOLD: "0.8" # not being used
  # optimization config
  SEARCH_SPACE_NAME: 'acmeair-searchspace'
  BAYESIAN: 'True'
  N_STARTUP_JOBS: '20'
  N_EI_CANDIDATES: '24'
  GAMMA: '0.25'
  NUMBER_ITERATIONS: '0'
  METRIC_THRESHOLD: '0.0'
  RANDOM_SEED: '31'
  ## the objective is always to minimize
  ## 2 ** 20 transforms bytes to megabytes
  OBJECTIVE: '-(throughput / (memory / (2 ** 20)))'
  SAMPLE_SIZE: '0.3334'
  WAITING_TIME: '900'
  POD_REGEX: 'acmeair-tuning-.*'
  POD_PROD_REGEX: 'acmeair-tuningprod-.*'
  QUANTILE: '1.0'
  # actuator config
  #  CONFIGMAP_NAME: 'jvm-config-train'
  #  CONFIGMAP_PROD_NAME: 'jvm-config-prod'
  CONFIGMAP_NAME: 'acmeair-config-train'
  CONFIGMAP_PROD_NAME: 'acmeair-config-prod'
  NAMESPACE: 'default'
  NAMESPACE_PROD: 'default'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: smarttuning
  labels:
    app: smarttuning
    config: "0"
spec:
  replicas: 1
  template:
    metadata:
      name: smarttuning
      labels:
        app: smarttuning
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - kind-worker
                      - docker-desktop
      containers:
        - name: smarttuning
          image: smarttuning
          imagePullPolicy: Never
          ports:
            - containerPort: 5000
          envFrom:
            - configMapRef:
                name: smarttuning-config
          volumeMounts:
            - mountPath: /etc/smart-tuning
              name: smarttuning-config
      volumes:
        - name: smarttuning-config
          configMap:
            name: smarttuning-config
  selector:
    matchLabels:
      app: smarttuning